pipeline {
   agent any
   stages {
     stage('Build') {
        steps {
             echo "Use Maven to build the code."
      }
   }
   stage('Unit and Integration Tests') {
   steps {
   echo "Run unit and integration tests using Selenium"
     }
  post {
  success {
  echo "Unit and Integration Testing was successful."
  emailext(
  to: 's223054534@deakin.edu.au',
 subject: "Tests Passed: ${currentBuild.currentResult}",
 body: "Unit and Integration tests passed successfully.",
 attachLog: true
 )
 }
 failure {
 echo "Unit and Integration Testing failed."
 emailext(
 to: 's223054534@deakin.edu.au',
 subject: "Tests Failed: ${currentBuild.currentResult}",
 body: "Unit and Integration tests failed. Check the logs for details.",
 attachLog: true
 )
 }
 }
 }
 stage('Code Analysis') {
 steps {
 echo "Performing code analysis with SonarQube."
 }
 }
 stage('Security Scan') {
 steps {
 echo "Conducting security scan with OWASP ZAP."
 }
 post {
 success {
 echo "Security Scan passed."
 emailext(
 to: 's223054534@deakin.edu.au',
 subject: "Security Scan Passed: ${currentBuild.currentResult}",
 body: "Security scan completed successfully.",
 attachLog: true
 )
 }
 failure {
 echo "Security Scan failed."
 emailext(
 to: 's223054534@deakin.edu.au',
 subject: "Security Scan Failed: ${currentBuild.currentResult}",
 body: "Security scan encountered issues. Check the logs for details.",
 attachLog: true
 )
 }
 }
 }
 stage('Deploy to Staging') {
 steps {
 echo "Deploying to staging server on AWS EC2 instance."
 // Add deployment steps here
 }
 }
 stage('Integration Tests on Staging') {
 steps {
 echo "Executing integration tests in staging environment."
 // Add integration test steps here
 }
 }
 stage('Deploy to Production') {
 steps {
 echo "Deploying to production environment."
 // Add production deployment steps here
 }
 }
 }
}
